{"version":3,"sources":["actions/task.js","utils/getRandom.js","api/task.js","sagas/task.js","sagas/index.js","history.js","styles/index.js","components/TaskLog.js","utils/splitTasksByTime.js","components/TaskChart.js","components/TaskTimer.js","scenes/home/Home.js","scenes/task/Task.js","scenes/NotFound.js","App.js","serviceWorker.js","reducers/task.js","reducers/index.js","index.js"],"names":["REQUEST_TASKS","RECEIVE_TASKS","FAILURE_TASKS","REQUEST_TASK","RECEIVE_TASK","FAILURE_TASK","REQUEST_CURRENT_TASK","RECEIVE_CURRENT_TASK","FAILURE_CURRENT_TASK","UPDATE_CURRENT_TASK","START_TASK","STOP_TASK","DESTROY_TASK","GENERATE_RANDOM_TASKS","requestTasks","type","receiveTasks","payload","failureTasks","receiveTask","failureTask","requestCurrentTask","receiveCurrentTask","failureCurrentTask","updateCurrentTask","startTask","stopTask","getRandom","min","arguments","length","undefined","max","Math","floor","random","getNextId","data","JSON","parse","localStorage","getItem","initialTasks","id","stringify","initialTask","start","stop","name","index","Promise","resolve","setTimeout","show","reject","result","find","item","Number","destroy","setItem","filter","current","Object","objectSpread","DateTime","local","updateCurrent","generateRandomTasks","taskId","startDate","fromObject","hour","minute","second","stopDate","toFormat","plus","seconds","push","toISO","concat","task","tasks","toConsumableArray","removeItem","onRequestTasks","onGenerateRandomTasks","onRequestTask","onRequestCurrentTask","onStartTask","onStopTask","onUpdateCurrentTask","onDestroyTask","watchRoot","rootSaga","results","regenerator_default","a","wrap","_context","prev","next","call","taskIndex","sent","put","t0","_marked","_context2","taskGenerateRandomTasks","_marked2","_ref","_context3","taskShow","_marked3","_context4","taskCurrent","_marked4","_context5","taskStart","_marked5","_context6","taskStop","_marked6","_ref2","_context7","delay","taskUpdateCurrent","_marked7","_ref3","_context8","taskDestroy","_marked8","_context9","takeEvery","takeLatest","_marked9","_context10","all","_marked10","sagas_marked","history","createHashHistory","styles","theme","root","display","flex","alignItems","flexDirection","subRoot","width","container","maxWidth","textField","marginBottom","color","timer","height","background","fontSize","card","marginTop","minWidth","pos","actionTimer","actionButton","buttonContainerCenter","justifyContent","tabs","tabsItems","modal","top","left","transform","position","backgroundColor","palette","paper","boxShadow","shadows","padding","spacing","unit","outline","modalContent","modalClose","right","bottom","contentWrapper","button","cellTable","marginTopContainer","connect","items","destroyTask","withStyles","props","classes","react_default","createElement","Grid_default","className","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","map","row","key","component","scope","fromISO","Interval","fromDateTimes","toDuration","Button_default","variant","Link","to","onClick","fromISOToDate","date","splitTasksByTime","Array","from","value","time","stopTime","day","minutes","set","milliseconds","reduce","accumulator","useMemo","es6","margin","strokeDasharray","dataKey","fill","currentTask","currentItem","_useState","useState","_useState2","slicedToArray","setTask","_useState3","_useState4","setTimer","_useState5","_useState6","warning","setWarning","useEffect","clock","setInterval","clearInterval","Modal_default","aria-labelledby","aria-describedby","open","onClose","Typography_default","TextField_default","label","onChange","e","target","Fab_default","trim","direction","components_TaskTimer","AppBar_default","Tabs_default","location","pathname","Tab_default","react_router","path","exact","TaskLog","TaskChart","isError","requestTask","match","params","Card_default","CardContent_default","CardActions_default","size","goBack","justify","xs","md","gutterBottom","RouterLink","App","Home","Task","NotFound","Boolean","window","hostname","initialState","isFetching","combineReducers","state","action","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","composeWithDevTools","applyMiddleware","run","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6PAAaA,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAe,eACfC,EAAe,eACfC,EAAe,eACfC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAsB,sBACtBC,EAAa,aACbC,EAAY,YACZC,EAAe,eACfC,EAAwB,wBAExBC,EAAe,WAC1B,MAAO,CAAEC,KAAMf,IAGJgB,EAAe,SAACC,GAC3B,MAAO,CAAEF,KAAMd,EAAegB,YAGnBC,EAAe,WAC1B,MAAO,CAAEH,KAAMb,IAOJiB,EAAc,SAACF,GAC1B,MAAO,CAAEF,KAAMX,EAAca,YAGlBG,EAAc,WACzB,MAAO,CAAEL,KAAMV,IAGJgB,EAAqB,WAChC,MAAO,CAAEN,KAAMT,IAGJgB,EAAqB,SAACL,GACjC,MAAO,CAAEF,KAAMR,EAAsBU,YAG1BM,EAAqB,WAChC,MAAO,CAAER,KAAMP,IAGJgB,EAAoB,SAACP,GAChC,MAAO,CAAEF,KAAMN,EAAqBQ,YAGzBQ,EAAY,WACvB,MAAO,CAAEV,KAAML,IAGJgB,EAAW,WACtB,MAAO,CAAEX,KAAMJ,6BCxDFgB,EAJG,WAAkB,IAAjBC,EAAiBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAX,EAAGG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClC,OAAOE,KAAKC,MAAMD,KAAKE,UAAYH,EAAMJ,GAAOA,EAAM,ICGlDQ,EAAY,WAChB,IAAIC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UAAYC,KAEvD,OAAQL,EAAKA,EAAKP,OAAS,IAAMO,EAAKA,EAAKP,OAAS,GAAGa,GAAK,GAAM,GAG9DD,EAAe,kBAAMJ,KAAKM,UAAU,KAEpCC,EAAc,kBAAMP,KAAKM,UAAU,CACvCD,GAAIP,IACJU,MAAO,KACPC,KAAM,KACNC,KAAM,MAGKC,EAAQ,kBAAM,IAAIC,QAAQ,SAACC,GACtCC,WAAW,WACT,IAAIf,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UAAYC,KAEvDS,EAAQd,IACP,OAGQgB,EAAO,SAACpC,GAAD,OAAa,IAAIiC,QAAQ,SAACC,EAASG,GACrDF,WAAW,WACT,IAEMG,EAFKjB,KAAKC,MAAMC,aAAaC,QAAQ,UAAYC,KAEnCc,KAAK,SAAAC,GAAI,OAAIA,EAAKd,KAAOe,OAAOzC,EAAQ0B,MAExDY,EACFJ,EAAQI,GAERD,KAED,OAGQK,EAAU,SAAC1C,GAAD,OAAa,IAAIiC,QAAQ,SAACC,GAC/CC,WAAW,WACT,IAAIf,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UAAYC,KAEvDF,aAAaoB,QAAQ,QAAStB,KAAKM,UAAUP,EAAKwB,OAAO,SAAAJ,GAAI,OAAIA,EAAKd,KAAOe,OAAOzC,EAAQ0B,QAE5FQ,KACC,OAGQW,EAAU,kBAAM,IAAIZ,QAAQ,SAACC,GACxCC,WAAW,WACT,IAAMf,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAAWI,KAExDM,EAAQd,IACP,OAGQS,EAAQ,kBAAM,IAAII,QAAQ,SAACC,GACtCC,WAAW,WACT,IAAMf,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAAWI,KAExDL,aAAaoB,QAAQ,OAAQtB,KAAKM,UAALmB,OAAAC,EAAA,EAAAD,CAAA,GACxB1B,EADwB,CAE3BS,MAAOmB,WAASC,YAGlBf,KACC,OAGQgB,EAAgB,SAAClD,GAAD,OAAa,IAAIiC,QAAQ,SAACC,GACrDC,WAAW,WACT,IAAMf,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAAWI,KAExDL,aAAaoB,QAAQ,OAAQtB,KAAKM,UAALmB,OAAAC,EAAA,EAAAD,CAAA,GACxB1B,EACApB,KAGLkC,KACC,OAGQiB,EAAsB,kBAAM,IAAIlB,QAAQ,SAACC,GACpDC,WAAW,WAMT,IALA,IAAIiB,EAAS,EACPhC,EAAO,GACTiC,EAAYL,WAASM,WAAW,CAAEC,KAAM,EAAGC,OAAQ,EAAGC,OAAQ,IAC9DC,EAAW,KAERL,EAAUM,SAAS,gBAAkBX,WAASC,QAAQU,SAAS,eAEpED,GADAL,EAAYA,EAAUO,KAAK,CAACC,QAASnD,EAAU,EAAG,SAC7BkD,KAAK,CAACC,QAASnD,EAAU,IAAS,QAEvDU,EAAK0C,KAAK,CACRpC,GAAI0B,EACJvB,MAAOwB,EAAUU,QACjBjC,KAAM4B,EAASK,QACfhC,KAAI,SAAAiC,OAAWZ,KAGjBA,GAAU,EAEVC,EAAYK,EAGdnC,aAAaoB,QAAQ,QAAStB,KAAKM,UAAUP,IAE7Cc,KACC,OAGQJ,EAAO,kBAAM,IAAIG,QAAQ,SAACC,GACrCC,WAAW,WACT,IAAM8B,EAAO5C,KAAKC,MAAMC,aAAaC,QAAQ,SAAWI,KAClDsC,EAAQ7C,KAAKC,MAAMC,aAAaC,QAAQ,UAAYC,KAE1DF,aAAaoB,QAAQ,QAAStB,KAAKM,UAAL,GAAAqC,OAAAlB,OAAAqB,EAAA,EAAArB,CACzBoB,GADyB,CAAApB,OAAAC,EAAA,EAAAD,CAAA,GAGvBmB,EAHuB,CAI1BnC,KAAMkB,WAASC,cAInB1B,aAAa6C,WAAW,QAExBlC,KACC,mBClGYmC,gBASAC,gBAUAC,gBASAC,gBASAC,gBAUAC,gBAWAC,gBAYAC,gBAKAC,gBAWQC,IAtFlB,SAAUT,KAAV,IAAAU,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEa,OAFbF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEmBC,YAAKC,GAFxB,OAGH,OADMR,EAFHI,EAAAK,KAAAL,EAAAE,KAAA,EAGGI,YAAI1F,EAAagF,IAHpB,OAAAI,EAAAE,KAAA,gBAKH,OALGF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAAAA,EAAAE,KAAA,GAKGI,YAAIxF,KALP,yBAAAkF,EAAArD,SAAA6D,GAAA,cASA,SAAUrB,KAAV,OAAAU,EAAAC,EAAAC,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OAEH,OAFGO,EAAAR,KAAA,EAAAQ,EAAAP,KAAA,EAEGC,YAAKO,GAFR,OAIH,OAJGD,EAAAP,KAAA,EAIGI,YAAI5F,KAJP,OAAA+F,EAAAP,KAAA,gBAMH,OANGO,EAAAR,KAAA,EAAAQ,EAAAF,GAAAE,EAAA,SAAAA,EAAAP,KAAA,GAMGI,YAAIxF,KANP,yBAAA2F,EAAA9D,SAAAgE,GAAA,cAUA,SAAUvB,GAAVwB,GAAA,IAAA/F,EAAA+E,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OAEa,OAFarF,EAA1B+F,EAA0B/F,QAA1BgG,EAAAZ,KAAA,EAAAY,EAAAX,KAAA,EAEmBC,YAAKW,EAAUjG,GAFlC,OAGH,OADM+E,EAFHiB,EAAAR,KAAAQ,EAAAX,KAAA,EAGGI,YAAIvF,EAAY6E,IAHnB,OAAAiB,EAAAX,KAAA,gBAKH,OALGW,EAAAZ,KAAA,EAAAY,EAAAN,GAAAM,EAAA,SAAAA,EAAAX,KAAA,GAKGI,YAAItF,KALP,yBAAA6F,EAAAlE,SAAAoE,GAAA,cASA,SAAU1B,KAAV,IAAAO,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,OAEa,OAFbc,EAAAf,KAAA,EAAAe,EAAAd,KAAA,EAEmBC,YAAKc,GAFxB,OAGH,OADMrB,EAFHoB,EAAAX,KAAAW,EAAAd,KAAA,EAGGI,YAAIpF,EAAmB0E,IAH1B,OAAAoB,EAAAd,KAAA,gBAKH,OALGc,EAAAf,KAAA,EAAAe,EAAAT,GAAAS,EAAA,SAAAA,EAAAd,KAAA,GAKGI,YAAIxF,KALP,yBAAAkG,EAAArE,SAAAuE,GAAA,cASA,SAAU5B,KAAV,OAAAO,EAAAC,EAAAC,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,OAEH,OAFGiB,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,EAEGC,YAAKiB,GAFR,OAIH,OAJGD,EAAAjB,KAAA,EAIGI,YAAIrF,KAJP,OAAAkG,EAAAjB,KAAA,gBAMH,OANGiB,EAAAlB,KAAA,EAAAkB,EAAAZ,GAAAY,EAAA,SAAAA,EAAAjB,KAAA,GAMGI,YAAInF,KANP,yBAAAgG,EAAAxE,SAAA0E,GAAA,cAUA,SAAU9B,KAAV,OAAAM,EAAAC,EAAAC,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OAEH,OAFGoB,EAAArB,KAAA,EAAAqB,EAAApB,KAAA,EAEGC,YAAKoB,GAFR,OAIH,OAJGD,EAAApB,KAAA,EAIGI,YAAIrF,KAJP,OAKH,OALGqG,EAAApB,KAAA,EAKGI,YAAI5F,KALP,OAAA4G,EAAApB,KAAA,gBAOH,OAPGoB,EAAArB,KAAA,EAAAqB,EAAAf,GAAAe,EAAA,SAAAA,EAAApB,KAAA,GAOGI,YAAInF,KAPP,yBAAAmG,EAAA3E,SAAA6E,GAAA,cAWA,SAAUhC,GAAViC,GAAA,IAAA5G,EAAA,OAAAgF,EAAAC,EAAAC,KAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,OACL,OADqCrF,EAAhC4G,EAAgC5G,QAAhC6G,EAAAxB,KAAA,EACCyB,YAAM,KADP,OAIH,OAJGD,EAAAzB,KAAA,EAAAyB,EAAAxB,KAAA,EAIGC,YAAKyB,EAAmB/G,GAJ3B,OAMH,OANG6G,EAAAxB,KAAA,EAMGI,YAAIrF,KANP,OAAAyG,EAAAxB,KAAA,iBAQH,OARGwB,EAAAzB,KAAA,GAAAyB,EAAAnB,GAAAmB,EAAA,SAAAA,EAAAxB,KAAA,GAQGI,YAAInF,KARP,yBAAAuG,EAAA/E,SAAAkF,GAAA,eAYA,SAAUpC,GAAVqC,GAAA,IAAAjH,EAAA,OAAAgF,EAAAC,EAAAC,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OACL,OAD+BrF,EAA1BiH,EAA0BjH,QAA1BkH,EAAA7B,KAAA,EACCC,YAAK6B,EAAanH,GADnB,OAEL,OAFKkH,EAAA7B,KAAA,EAECI,YAAI5F,KAFL,wBAAAqH,EAAApF,SAAAsF,IAKA,SAAUvC,KAAV,OAAAG,EAAAC,EAAAC,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,OACL,OADKgC,EAAAhC,KAAA,EACCiC,YAAUvI,EAAesF,IAD1B,OAEL,OAFKgD,EAAAhC,KAAA,EAECiC,YAAUpI,EAAcqF,IAFzB,OAGL,OAHK8C,EAAAhC,KAAA,EAGCiC,YAAUjI,EAAsBmF,IAHjC,OAIL,OAJK6C,EAAAhC,KAAA,EAICiC,YAAU7H,EAAYgF,IAJvB,OAKL,OALK4C,EAAAhC,KAAA,GAKCiC,YAAU5H,EAAWgF,IALtB,QAML,OANK2C,EAAAhC,KAAA,GAMCiC,YAAU3H,EAAciF,IANzB,QAOL,OAPKyC,EAAAhC,KAAA,GAOCiC,YAAU1H,EAAuB0E,IAPlC,QAQL,OARK+C,EAAAhC,KAAA,GAQCkC,YAAW/H,EAAqBmF,IARjC,yBAAA0C,EAAAvF,SAAA0F,IAWQ,SAAU1C,KAAV,OAAAE,EAAAC,EAAAC,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,OACb,OADaoC,EAAApC,KAAA,EACPqC,YAAI,CACR7C,OAFW,wBAAA4C,EAAA3F,SAAA6F,oBClHU7C,IAAV,SAAUA,KAAV,OAAAE,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACb,OADaF,EAAAE,KAAA,EACPqC,YAAI,CACRzD,OAFW,wBAAAkB,EAAArD,SAAA8F,iCCDAC,GAFCC,gPC4FDC,GA7FA,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,QAAS,OACTC,KAAM,EACNC,WAAY,SACZC,cAAe,UAEjBC,QAAS,CACPJ,QAAS,OACTK,MAAO,OACPF,cAAe,UAEjBG,UAAW,CACTC,SAAU,SAEZC,UAAW,CACTH,MAAO,QACPI,aAAc,SACdC,MAAO,WAETC,MAAO,CACLN,MAAO,QACPO,OAAQ,QACRC,WAAY,UACZJ,aAAc,SACdK,SAAU,OACVJ,MAAO,WAETK,KAAM,CACJC,UAAW,SACXP,aAAc,SACdQ,SAAU,SAEZC,IAAK,CACHF,UAAW,GACXP,aAAc,GAEhBU,YAAa,CACXV,aAAc,SACdI,WAAY,UACZH,MAAO,WAETU,aAAc,CACZJ,UAAW,SACXP,aAAc,SACdI,WAAY,UACZH,MAAO,WAETW,sBAAuB,CACrBrB,QAAS,OACTsB,eAAgB,YAElBC,KAAM,CACJd,aAAc,UAEhBe,UAAW,CACTX,WAAY,WAEdY,MAAO,CACLC,IAAG,MACHC,KAAI,MACJC,UAAS,wBACTC,SAAU,WACVxB,MAAO,QACPyB,gBAAiBhC,EAAMiC,QAAQlB,WAAWmB,MAC1CC,UAAWnC,EAAMoC,QAAQ,GACzBC,QAA8B,EAArBrC,EAAMsC,QAAQC,KACvBC,QAAS,QAEXC,aAAc,CACZ9B,aAAc,UAEhB+B,WAAY,CACVX,SAAU,WACVnB,MAAO,UACP+B,MAAO,GACPC,OAAQ,IAEVC,eAAgB,CACdlC,aAAc,UAEhBmC,OAAQ,CACN/B,WAAY,UACZH,MAAO,WAETmC,UAAW,CACThC,WAAY,WAEdiC,mBAAoB,CAClB9B,UAAW,YCYA+B,eACb,SAAAlF,GAAA,MAAe,CACb7B,MADF6B,EAAG9B,KACWiH,QACV,CACFC,YP1CuB,SAACnL,GAC1B,MAAO,CAAEF,KAAMH,EAAcK,aOqChBiL,CAKVG,sBAAWrD,GAAXqD,CApFW,SAACC,GAAU,IACjBC,EAAYD,EAAZC,QAER,OACEC,EAAAtG,EAAAuG,cAACC,GAAAxG,EAAD,CAAMuD,WAAS,EAACkD,UAAWJ,EAAQT,gBACjCU,EAAAtG,EAAAuG,cAACG,GAAA1G,EAAD,KACEsG,EAAAtG,EAAAuG,cAACI,GAAA3G,EAAD,KACEsG,EAAAtG,EAAAuG,cAACK,GAAA5G,EAAD,KACEsG,EAAAtG,EAAAuG,cAACM,GAAA7G,EAAD,UACAsG,EAAAtG,EAAAuG,cAACM,GAAA7G,EAAD,aACAsG,EAAAtG,EAAAuG,cAACM,GAAA7G,EAAD,mBACAsG,EAAAtG,EAAAuG,cAACM,GAAA7G,EAAD,iBACAsG,EAAAtG,EAAAuG,cAACM,GAAA7G,EAAD,mBACAsG,EAAAtG,EAAAuG,cAACM,GAAA7G,EAAD,aACAsG,EAAAtG,EAAAuG,cAACM,GAAA7G,EAAD,iBAGJsG,EAAAtG,EAAAuG,cAACO,GAAA9G,EAAD,KACGoG,EAAMnH,MAAM8H,IAAI,SAAAC,GAAG,OAClBV,EAAAtG,EAAAuG,cAACK,GAAA5G,EAAD,CACEiH,IAAKD,EAAIvK,GACTgK,UAAWJ,EAAQP,WAEnBQ,EAAAtG,EAAAuG,cAACM,GAAA7G,EAAD,CAAWkH,UAAU,KAAKC,MAAM,OAC7BH,EAAIvK,IAEP6J,EAAAtG,EAAAuG,cAACM,GAAA7G,EAAD,KACGgH,EAAIlK,MAEPwJ,EAAAtG,EAAAuG,cAACM,GAAA7G,EAAD,KACGjC,WAASqJ,QAAQJ,EAAIpK,OAAO8B,SAAS,aAExC4H,EAAAtG,EAAAuG,cAACM,GAAA7G,EAAD,KACGjC,WAASqJ,QAAQJ,EAAInK,MAAM6B,SAAS,aAEvC4H,EAAAtG,EAAAuG,cAACM,GAAA7G,EAAD,KAEIqH,WACGC,cAAcvJ,WAASqJ,QAAQJ,EAAIpK,OAAQmB,WAASqJ,QAAQJ,EAAInK,OAChE0K,aACA7I,SAAS,aAGhB4H,EAAAtG,EAAAuG,cAACM,GAAA7G,EAAD,KACEsG,EAAAtG,EAAAuG,cAACiB,GAAAxH,EAAD,CACEyH,QAAQ,YACRhB,UAAWJ,EAAQR,OACnBqB,UAAWQ,KACXC,GAAE,UAAA5I,OAAYiI,EAAIvK,KAJpB,SASF6J,EAAAtG,EAAAuG,cAACM,GAAA7G,EAAD,KACEsG,EAAAtG,EAAAuG,cAACiB,GAAAxH,EAAD,CACEyH,QAAQ,YACRhB,UAAWJ,EAAQR,OACnB+B,QAAS,WACPxB,EAAMF,YAAY,CAChBzJ,GAAIuK,EAAIvK,OALd,6BC1EVoL,GAAgB,SAACC,GAAD,OAAU/J,WAASqJ,QAAQU,GAAMpJ,SAAS,eAwCjDqJ,GAtCU,SAAC9I,GACxB,OAAO+I,MAAMC,KAAK,CAAErM,OAAQ,IAAM,SAAC2B,EAAMR,GAAP,MAAkB,CAChDD,KAAMC,EACNmL,MAAOnM,KAAKC,MAAMiD,EACf8H,IAAI,SAAAxJ,GAAI,OAAAM,OAAAC,EAAA,EAAAD,CAAA,GACJN,EADI,CAEPX,MAAOiL,GAActK,EAAKV,QAAUkB,WAASC,QAAQU,SAAS,eACzDmJ,GAActK,EAAKX,SAAWiL,GAActK,EAAKV,MAChDkB,WAASM,WAAW,CAAEC,KAAM,EAAGC,OAAQ,EAAGC,OAAQ,IAAKM,QAAUvB,EAAKX,UAE7Ee,OAAO,SAAAJ,GAAI,OAAIsK,GAActK,EAAKX,SAAWmB,WAASC,QAAQU,SAAS,gBACvEqI,IAAI,SAACxJ,GAMJ,IALA,IAAMuC,EAAU,GACZqI,EAAOpK,WAASqJ,QAAQ7J,EAAKX,OAC3BwL,EAAWrK,WAASqJ,QAAQ7J,EAAKV,MACjCuB,EAAY+J,EAAKzJ,SAAS,cAEzByJ,GAAQC,IACTD,EAAK7J,OAAS8J,EAAS9J,KACzBwB,EAAQqI,EAAK7J,MAAQd,OAAO6J,WAASC,cAAca,EAAMC,GAAUb,aAAa7I,SAAS,MAEzFoB,EAAQqI,EAAK7J,MAAQd,OAAO6J,WACzBC,cAAca,EAAMpK,WAASM,WAAW,CAAEgK,IAAKF,EAAKE,IAAK/J,KAAM6J,EAAK7J,KAAO,KAC3EiJ,aAAa7I,SAAS,MAKvBN,KAFJ+J,EAAOA,EAAKxJ,KAAK,CAAE2J,QAAU,GAAKH,EAAK5J,SAAWgK,IAAI,CAAE3J,QAAS,EAAG4J,aAAc,KAE3D9J,SAAS,iBAKlC,OAAOoB,IACN2I,OAAO,SAACC,EAAaR,GAAd,OAAwBQ,GAAeR,EAAMnL,IAAU,IAAI,GAAK,QCoCnEiJ,eACb,SAAAlF,GAAA,MAAe,CACb7B,MADF6B,EAAG9B,KACWiH,QACV,CACF/H,oBTX+B,WACjC,MAAO,CAAErD,KAAMF,KSMFqL,CAKVG,sBAAWrD,GAAXqD,CAvDa,SAACC,GAAU,IACnBC,EAAYD,EAAZC,QACFlK,EAAOwM,kBAAQ,kBAAMZ,GAAiB3B,EAAMnH,QAAQ,CAACmH,EAAMnH,QAEjE,OACEqH,EAAAtG,EAAAuG,cAAA,OAAKE,UAAWJ,EAAQhD,SACtBiD,EAAAtG,EAAAuG,cAACqC,GAAA,EAAD,CACEtF,MAAM,OACNO,OAAQ,KAERyC,EAAAtG,EAAAuG,cAACqC,GAAA,EAAD,CACE/E,OAAQ,IACR1H,KAAMA,EACN0M,OAAQ,CACNlE,IAAK,EAAGe,MAAO,GAAId,KAAM,GAAIe,OAAQ,IAGvCW,EAAAtG,EAAAuG,cAACqC,GAAA,EAAD,CAAeE,gBAAgB,QAC/BxC,EAAAtG,EAAAuG,cAACqC,GAAA,EAAD,CAAOG,QAAQ,SACfzC,EAAAtG,EAAAuG,cAACqC,GAAA,EAAD,MACAtC,EAAAtG,EAAAuG,cAACqC,GAAA,EAAD,MACAtC,EAAAtG,EAAAuG,cAACqC,GAAA,EAAD,MACAtC,EAAAtG,EAAAuG,cAACqC,GAAA,EAAD,CACE9L,KAAK,wBACLiM,QAAQ,QACRC,KAAK,cAKX1C,EAAAtG,EAAAuG,cAAA,OAAKE,UAAWJ,EAAQ/B,uBACtBgC,EAAAtG,EAAAuG,cAACiB,GAAAxH,EAAD,CACEyH,QAAQ,YACRhB,UAAWJ,EAAQhC,aACnBuD,QAAS,WACPxB,EAAMlI,wBAJV,8GCqHO8H,eACb,SAAAlF,GAAA,MAAe,CACbmI,YADFnI,EAAG9B,KACiBkK,cAChB,CACF/N,qBACAI,YACAC,WACAF,qBAPW0K,CAQVG,sBAAWrD,GAAXqD,CA7Ja,SAACC,GAAU,IACnBC,EAAYD,EAAZC,QADmB8C,EAEHC,mBAAS,IAFNC,EAAAxL,OAAAyL,GAAA,EAAAzL,CAAAsL,EAAA,GAEpBnK,EAFoBqK,EAAA,GAEdE,EAFcF,EAAA,GAAAG,EAGDJ,mBAAS,YAHRK,EAAA5L,OAAAyL,GAAA,EAAAzL,CAAA2L,EAAA,GAGpB5F,EAHoB6F,EAAA,GAGbC,EAHaD,EAAA,GAAAE,EAIGP,oBAAS,GAJZQ,EAAA/L,OAAAyL,GAAA,EAAAzL,CAAA8L,EAAA,GAIpBE,EAJoBD,EAAA,GAIXE,EAJWF,EAAA,GAM3BG,oBAAU,WACR,IAAMC,EAAQ,WACZN,EAASrC,WACNC,cAAcvJ,WAASqJ,QAAQhB,EAAM6C,YAAYrM,OAAQmB,WAASC,SAClEuJ,aACA7I,SAAS,cAIV0H,EAAM6C,YAAYrM,OACpBoN,IAGF,IAAMpG,EAAQqG,YAAY,WACpB7D,EAAM6C,YAAYrM,MACpBoN,KAEAN,EAAS,YACTQ,cAActG,KAEf,KAEH,OAAO,WACLsG,cAActG,KAEf,CAACwC,EAAM6C,YAAYxM,GAAI2J,EAAM6C,YAAYrM,QAE5CmN,oBAAU,WAER3D,EAAMjL,sBACL,IAEH4O,oBAAU,WAERR,EAAQnD,EAAM6C,YAAYnM,OACzB,CAACsJ,EAAM6C,YAAYxM,KActB,OACE6J,EAAAtG,EAAAuG,cAAA,OAAKE,UAAWJ,EAAQrD,MACtBsD,EAAAtG,EAAAuG,cAAC4D,GAAAnK,EAAD,CACEoK,kBAAgB,qBAChBC,mBAAiB,2BACjBC,KAAMT,EACNU,QAAS,WACPT,GAAW,KAGbxD,EAAAtG,EAAAuG,cAAA,OAAKE,UAAWJ,EAAQ3B,OACtB4B,EAAAtG,EAAAuG,cAACC,GAAAxG,EAAD,CACEuD,WAAS,EACTkD,UAAWJ,EAAQb,cAEnBc,EAAAtG,EAAAuG,cAACiE,GAAAxK,EAAD,CACEyH,QAAQ,KACR9D,MAAM,QACNlH,GAAG,eAHL,mBAOA6J,EAAAtG,EAAAuG,cAACiE,GAAAxK,EAAD,CACEyH,QAAQ,YACRhL,GAAG,4BAFL,gFAQF6J,EAAAtG,EAAAuG,cAACiB,GAAAxH,EAAD,CACEyG,UAAWJ,EAAQZ,WACnBmC,QAAS,WACPkC,GAAW,KAHf,WAWJxD,EAAAtG,EAAAuG,cAACkE,GAAAzK,EAAD,CACEvD,GAAG,gBACHiO,MAAM,oBACNjE,UAAWJ,EAAQ5C,UACnByE,MAAOlJ,EACP2L,SAAU,SAACC,GACTrB,EAAQqB,EAAEC,OAAO3C,OAEjB9B,EAAM9K,kBAAkB,CACtBwB,KAAM8N,EAAEC,OAAO3C,SAGnBW,OAAO,WAGTvC,EAAAtG,EAAAuG,cAACuE,GAAA9K,EAAD,CAAKyG,UAAWJ,EAAQzC,OACpBA,GAGDwC,EAAM6C,YAAYrM,MASnB0J,EAAAtG,EAAAuG,cAACiB,GAAAxH,EAAD,CACEyH,QAAQ,YACRG,QA/ES,WACK,KAAhB5I,EAAK+L,OACP3E,EAAM5K,WAENsO,GAAW,IA4EPrD,UAAWJ,EAAQjC,aAHrB,QARAkC,EAAAtG,EAAAuG,cAACiB,GAAAxH,EAAD,CACEyH,QAAQ,YACRG,QA3EU,WAChBxB,EAAM7K,aA2EAkL,UAAWJ,EAAQjC,aAHrB,aC5CO4B,eACb,SAAAlF,GAAA,MAAe,CACbmI,YADFnI,EAAG9B,KACiBkK,cAChB,CACFtO,eACAO,qBACAI,YACAC,WACAF,qBARW0K,CASVG,sBAAWrD,GAAXqD,CA9EQ,SAACC,GAAU,IACdC,EAAYD,EAAZC,QAOR,OALA0D,oBAAU,WAER3D,EAAMxL,gBACL,IAGD0L,EAAAtG,EAAAuG,cAAA,OAAKE,UAAWJ,EAAQrD,MACtBsD,EAAAtG,EAAAuG,cAACC,GAAAxG,EAAD,CACEuD,WAAS,EACTJ,WAAW,SACX6H,UAAU,SACVvE,UAAWJ,EAAQ9C,WAEnB+C,EAAAtG,EAAAuG,cAAC0E,GAAD,MAEA3E,EAAAtG,EAAAuG,cAAC2E,GAAAlL,EAAD,CACE8E,SAAS,SACT2B,UAAWJ,EAAQ7B,MAEnB8B,EAAAtG,EAAAuG,cAAC4E,GAAAnL,EAAD,CACEyG,UAAWJ,EAAQ5B,UACnBgD,QAAQ,YACRS,MAAmC,MAA5B9B,EAAMgF,SAASC,SAAmB,EAAI,GAE7C/E,EAAAtG,EAAAuG,cAAC+E,GAAAtL,EAAD,CACEkH,UAAWQ,KACXC,GAAI,IACJ+C,MAAM,cAERpE,EAAAtG,EAAAuG,cAAC+E,GAAAtL,EAAD,CACEkH,UAAWQ,KACXC,GAAI,SACJ+C,MAAM,kBAKZpE,EAAAtG,EAAAuG,cAACgF,GAAA,EAAD,CACEC,KAAI,IACJC,OAAK,EACLvE,UAAWwE,KAEbpF,EAAAtG,EAAAuG,cAACgF,GAAA,EAAD,CACEC,KAAI,SACJC,OAAK,EACLvE,UAAWyE,yECgCN3F,eACb,SAAAlF,GAAA,IAAG9B,EAAH8B,EAAG9B,KAAH,MAAe,CACbA,KAAMA,EAAKzB,KACXqO,QAAS5M,EAAK4M,UACZ,CACFC,YZpFuB,SAAC9Q,GAC1B,MAAO,CAAEF,KAAMZ,EAAcc,aY8EhBiL,CAMVG,sBAAWrD,GAAXqD,CA3FQ,SAACC,GAAU,IACdC,EAAYD,EAAZC,QAER,OAAID,EAAMwF,QACDtF,EAAAtG,EAAAuG,cAACgF,GAAA,EAAD,CAAU5D,GAAI,UAGvBoC,oBAAU,WAER3D,EAAMyF,YAAY,CAChBpP,GAAI2J,EAAM0F,MAAMC,OAAOtP,MAExB,CAAC2J,EAAM0F,MAAMC,OAAOtP,KAGrB6J,EAAAtG,EAAAuG,cAAA,OAAKE,UAAWJ,EAAQrD,MACtBsD,EAAAtG,EAAAuG,cAACC,GAAAxG,EAAD,CAAMuD,WAAS,EAACJ,WAAW,SAAS6H,UAAU,SAASvE,UAAWJ,EAAQ9C,WAExE+C,EAAAtG,EAAAuG,cAACyF,GAAAhM,EAAD,CAAMyG,UAAWJ,EAAQrC,MACvBsC,EAAAtG,EAAAuG,cAAC0F,GAAAjM,EAAD,KACEsG,EAAAtG,EAAAuG,cAACiE,GAAAxK,EAAD,CACEyH,QAAQ,KACRP,UAAU,MAERd,EAAMpH,KAAKlC,MAEfwJ,EAAAtG,EAAAuG,cAACiE,GAAAxK,EAAD,CACEyG,UAAWJ,EAAQlC,IACnBR,MAAM,iBAFR,SAMA2C,EAAAtG,EAAAuG,cAACiE,GAAAxK,EAAD,CAAYkH,UAAU,KAClBnJ,WAASqJ,QAAQhB,EAAMpH,KAAKpC,OAAO8B,SAAS,wBAEhD4H,EAAAtG,EAAAuG,cAACiE,GAAAxK,EAAD,CACEyG,UAAWJ,EAAQlC,IACnBR,MAAM,iBAFR,OAMA2C,EAAAtG,EAAAuG,cAACiE,GAAAxK,EAAD,CAAYkH,UAAU,KAClBnJ,WAASqJ,QAAQhB,EAAMpH,KAAKnC,MAAM6B,SAAS,wBAE/C4H,EAAAtG,EAAAuG,cAACiE,GAAAxK,EAAD,CACEyG,UAAWJ,EAAQlC,IACnBR,MAAM,iBAFR,cAMA2C,EAAAtG,EAAAuG,cAACiE,GAAAxK,EAAD,CAAYkH,UAAU,KAElBG,WACGC,cAAcvJ,WAASqJ,QAAQhB,EAAMpH,KAAKpC,OAAQmB,WAASqJ,QAAQhB,EAAMpH,KAAKnC,OAC9E0K,aACA7I,SAAS,cAIlB4H,EAAAtG,EAAAuG,cAAC2F,GAAAlM,EAAD,KACEsG,EAAAtG,EAAAuG,cAACiB,GAAAxH,EAAD,CACEmM,KAAK,QACLvE,QAAS,WACPxB,EAAMxD,QAAQwJ,WAHlB,gBCtBGjG,yBAAWrD,GAAXqD,CAxCE,SAACC,GAAU,IAClBC,EAAYD,EAAZC,QAER,OACEC,EAAAtG,EAAAuG,cAACC,GAAAxG,EAAD,CACEyG,UAAWJ,EAAQN,mBACnBxC,WAAS,EACT8I,QAAQ,UAER/F,EAAAtG,EAAAuG,cAACC,GAAAxG,EAAD,CAAMzC,MAAI,EAAC+O,GAAI,GAAIC,GAAI,GACrBjG,EAAAtG,EAAAuG,cAACyF,GAAAhM,EAAD,KACEsG,EAAAtG,EAAAuG,cAAC0F,GAAAjM,EAAD,KACEsG,EAAAtG,EAAAuG,cAACiE,GAAAxK,EAAD,CACEyH,QAAQ,KACR+E,cAAY,GAFd,OAMAlG,EAAAtG,EAAAuG,cAACiE,GAAAxK,EAAD,CACE2D,MAAM,iBADR,oBAMF2C,EAAAtG,EAAAuG,cAAC2F,GAAAlM,EAAD,KACEsG,EAAAtG,EAAAuG,cAACiB,GAAAxH,EAAD,CACEyG,UAAWJ,EAAQR,OACnBsG,KAAK,QACLjF,UAAWuF,KACX9E,GAAI,KAJN,kBCvBG+E,GAbH,WACV,OACEpG,EAAAtG,EAAAuG,cAACgF,GAAA,EAAD,CAAQ3I,QAASA,IACf0D,EAAAtG,EAAAuG,cAACgF,GAAA,EAAD,KACEjF,EAAAtG,EAAAuG,cAACgF,GAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACvE,UAAWyF,KACjCrG,EAAAtG,EAAAuG,cAACgF,GAAA,EAAD,CAAOC,KAAK,SAASC,OAAK,EAACvE,UAAWyF,KACtCrG,EAAAtG,EAAAuG,cAACgF,GAAA,EAAD,CAAOC,KAAK,aAAaC,OAAK,EAACvE,UAAW0F,KAC1CtG,EAAAtG,EAAAuG,cAACgF,GAAA,EAAD,CAAOrE,UAAW2F,QCHNC,QACW,cAA7BC,OAAO3B,SAAS4B,UAEe,UAA7BD,OAAO3B,SAAS4B,UAEhBD,OAAO3B,SAAS4B,SAASlB,MACvB,2DCNN,IAAMmB,GAAe,CACnBC,YAAY,EACZtB,SAAS,EACT3F,MAAO,GACP1I,KAAM,GACN2L,YAAa,CACXpM,KAAM,KCdKqQ,iCAAgB,CAAEnO,KDkBlB,WAA+C,IAA9BoO,EAA8BzR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBsR,GAAcI,EAAQ1R,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5D,OAAQwR,EAAOxS,MACb,KAAKf,EACH,OAAO+D,OAAAC,EAAA,EAAAD,CAAA,GAAKuP,EAAZ,CAAmBF,YAAY,EAAMtB,SAAS,IAChD,KAAK7R,EACH,OAAO8D,OAAAC,EAAA,EAAAD,CAAA,GAAKuP,EAAZ,CAAmBnH,MAAOoH,EAAOtS,QAASmS,YAAY,IACxD,KAAKlT,EACH,OAAO6D,OAAAC,EAAA,EAAAD,CAAA,GAAKuP,EAAZ,CAAmBF,YAAY,EAAOtB,SAAS,IAEjD,KAAK3R,EACH,OAAO4D,OAAAC,EAAA,EAAAD,CAAA,GAAKuP,EAAZ,CAAmBF,YAAY,EAAMtB,SAAS,IAChD,KAAK1R,EACH,OAAO2D,OAAAC,EAAA,EAAAD,CAAA,GAAKuP,EAAZ,CAAmB7P,KAAM8P,EAAOtS,QAASmS,YAAY,IACvD,KAAK/S,EACH,OAAO0D,OAAAC,EAAA,EAAAD,CAAA,GAAKuP,EAAZ,CAAmBF,YAAY,EAAOtB,SAAS,IAEjD,KAAKxR,EACH,OAAOyD,OAAAC,EAAA,EAAAD,CAAA,GAAKuP,EAAZ,CAAmBF,YAAY,EAAMtB,SAAS,IAChD,KAAKvR,EACH,OAAOwD,OAAAC,EAAA,EAAAD,CAAA,GAAKuP,EAAZ,CAAmBlE,YAAamE,EAAOtS,QAASmS,YAAY,IAC9D,KAAK5S,EACH,OAAOuD,OAAAC,EAAA,EAAAD,CAAA,GAAKuP,EAAZ,CAAmBF,YAAY,EAAOtB,SAAS,IACjD,QACE,OAAOwB,ME/BPE,GAAiBC,cACjBC,GAAQC,sBAAYC,GAAUC,8BAAoBC,0BAAgBN,MACxEA,GAAeO,IAAIhO,IAEnBiO,IAASC,OACPzH,EAAAtG,EAAAuG,cAACyH,EAAA,EAAD,CAAUR,MAAOA,IACflH,EAAAtG,EAAAuG,cAAC0H,GAAD,OAEAC,SAASC,eAAe,SH2GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.911b7446.chunk.js","sourcesContent":["export const REQUEST_TASKS = 'REQUEST_TASKS';\nexport const RECEIVE_TASKS = 'RECEIVE_TASKS';\nexport const FAILURE_TASKS = 'FAILURE_TASKS';\nexport const REQUEST_TASK = 'REQUEST_TASK';\nexport const RECEIVE_TASK = 'RECEIVE_TASK';\nexport const FAILURE_TASK = 'FAILURE_TASK';\nexport const REQUEST_CURRENT_TASK = 'REQUEST_CURRENT_TASK';\nexport const RECEIVE_CURRENT_TASK = 'RECEIVE_CURRENT_TASK';\nexport const FAILURE_CURRENT_TASK = 'FAILURE_CURRENT_TASK';\nexport const UPDATE_CURRENT_TASK = 'UPDATE_CURRENT_TASK';\nexport const START_TASK = 'START_TASK';\nexport const STOP_TASK = 'STOP_TASK';\nexport const DESTROY_TASK = 'DESTROY_TASK';\nexport const GENERATE_RANDOM_TASKS = 'GENERATE_RANDOM_TASKS';\n\nexport const requestTasks = () => {\n  return { type: REQUEST_TASKS };\n};\n\nexport const receiveTasks = (payload) => {\n  return { type: RECEIVE_TASKS, payload };\n};\n\nexport const failureTasks = () => {\n  return { type: FAILURE_TASKS };\n};\n\nexport const requestTask = (payload) => {\n  return { type: REQUEST_TASK, payload };\n};\n\nexport const receiveTask = (payload) => {\n  return { type: RECEIVE_TASK, payload };\n};\n\nexport const failureTask = () => {\n  return { type: FAILURE_TASK };\n};\n\nexport const requestCurrentTask = () => {\n  return { type: REQUEST_CURRENT_TASK };\n};\n\nexport const receiveCurrentTask = (payload) => {\n  return { type: RECEIVE_CURRENT_TASK, payload };\n};\n\nexport const failureCurrentTask = () => {\n  return { type: FAILURE_CURRENT_TASK };\n};\n\nexport const updateCurrentTask = (payload) => {\n  return { type: UPDATE_CURRENT_TASK, payload };\n};\n\nexport const startTask = () => {\n  return { type: START_TASK };\n};\n\nexport const stopTask = () => {\n  return { type: STOP_TASK };\n};\n\nexport const destroyTask = (payload) => {\n  return { type: DESTROY_TASK, payload };\n};\n\nexport const generateRandomTasks = () => {\n  return { type: GENERATE_RANDOM_TASKS };\n};\n","const getRandom = (min = 0, max) => {\n  return Math.floor(Math.random() * (max - min) + min + 1);\n};\n\nexport default getRandom;\n","import { DateTime } from 'luxon';\n\nimport getRandom from '../utils/getRandom';\n\nconst getNextId = () => {\n  let data = JSON.parse(localStorage.getItem('tasks') || initialTasks());\n\n  return (data[data.length - 1] && data[data.length - 1].id + 1) || 1;\n};\n\nconst initialTasks = () => JSON.stringify([]);\n\nconst initialTask = () => JSON.stringify({\n  id: getNextId(),\n  start: null,\n  stop: null,\n  name: '',\n});\n\nexport const index = () => new Promise((resolve) => {\n  setTimeout(() => {\n    let data = JSON.parse(localStorage.getItem('tasks') || initialTasks());\n\n    resolve(data);\n  }, 50);\n});\n\nexport const show = (payload) => new Promise((resolve, reject) => {\n  setTimeout(() => {\n    let data = JSON.parse(localStorage.getItem('tasks') || initialTasks());\n\n    const result = data.find(item => item.id === Number(payload.id));\n\n    if (result) {\n      resolve(result);\n    } else {\n      reject();\n    }\n  }, 50);\n});\n\nexport const destroy = (payload) => new Promise((resolve) => {\n  setTimeout(() => {\n    let data = JSON.parse(localStorage.getItem('tasks') || initialTasks());\n\n    localStorage.setItem('tasks', JSON.stringify(data.filter(item => item.id !== Number(payload.id))));\n\n    resolve();\n  }, 50);\n});\n\nexport const current = () => new Promise((resolve) => {\n  setTimeout(() => {\n    const data = JSON.parse(localStorage.getItem('task') || initialTask());\n\n    resolve(data);\n  }, 50);\n});\n\nexport const start = () => new Promise((resolve) => {\n  setTimeout(() => {\n    const data = JSON.parse(localStorage.getItem('task') || initialTask());\n\n    localStorage.setItem('task', JSON.stringify({\n      ...data,\n      start: DateTime.local(),\n    }));\n\n    resolve();\n  }, 50);\n});\n\nexport const updateCurrent = (payload) => new Promise((resolve) => {\n  setTimeout(() => {\n    const data = JSON.parse(localStorage.getItem('task') || initialTask());\n\n    localStorage.setItem('task', JSON.stringify({\n      ...data,\n      ...payload,\n    }));\n\n    resolve();\n  }, 50);\n});\n\nexport const generateRandomTasks = () => new Promise((resolve) => {\n  setTimeout(() => {\n    let taskId = 1;\n    const data = [];\n    let startDate = DateTime.fromObject({ hour: 0, minute: 0, second: 0 });\n    let stopDate = null;\n\n    while (startDate.toFormat('yyyy-LL-dd') === DateTime.local().toFormat('yyyy-LL-dd')) {\n      startDate = startDate.plus({seconds: getRandom(0, 60 * 60 * 1.5)});\n      stopDate = startDate.plus({seconds: getRandom(60 * 10, 60 * 60 * 1.5)});\n\n      data.push({\n        id: taskId,\n        start: startDate.toISO(),\n        stop: stopDate.toISO(),\n        name: `Task #${taskId}`,\n      });\n\n      taskId += 1;\n\n      startDate = stopDate;\n    }\n\n    localStorage.setItem('tasks', JSON.stringify(data));\n\n    resolve();\n  }, 50);\n});\n\nexport const stop = () => new Promise((resolve) => {\n  setTimeout(() => {\n    const task = JSON.parse(localStorage.getItem('task') || initialTask());\n    const tasks = JSON.parse(localStorage.getItem('tasks') || initialTasks());\n\n    localStorage.setItem('tasks', JSON.stringify([\n      ...tasks,\n      {\n        ...task,\n        stop: DateTime.local(),\n      },\n    ]));\n\n    localStorage.removeItem('task');\n\n    resolve();\n  }, 50);\n});\n","import { put, takeEvery, takeLatest, all, call, delay } from 'redux-saga/effects';\n\nimport {\n  REQUEST_TASKS,\n  REQUEST_TASK,\n  REQUEST_CURRENT_TASK,\n  START_TASK,\n  STOP_TASK,\n  DESTROY_TASK,\n  GENERATE_RANDOM_TASKS,\n  UPDATE_CURRENT_TASK,\n  requestTasks,\n  receiveTasks,\n  failureTasks,\n  requestCurrentTask,\n  receiveCurrentTask,\n  failureCurrentTask,\n  receiveTask,\n  failureTask,\n} from '../actions/task';\n\nimport {\n  index as taskIndex,\n  start as taskStart,\n  stop as taskStop,\n  current as taskCurrent,\n  show as taskShow,\n  updateCurrent as taskUpdateCurrent,\n  destroy as taskDestroy,\n  generateRandomTasks as taskGenerateRandomTasks,\n} from '../api/task';\n\nexport function* onRequestTasks() {\n  try {\n    const results = yield call(taskIndex);\n    yield put(receiveTasks(results));\n  } catch (e) {\n    yield put(failureTasks());\n  }\n}\n\nexport function* onGenerateRandomTasks() {\n  try {\n    yield call(taskGenerateRandomTasks);\n\n    yield put(requestTasks());\n  } catch (e) {\n    yield put(failureTasks());\n  }\n}\n\nexport function* onRequestTask({ payload }) {\n  try {\n    const results = yield call(taskShow, payload);\n    yield put(receiveTask(results));\n  } catch (e) {\n    yield put(failureTask());\n  }\n}\n\nexport function* onRequestCurrentTask() {\n  try {\n    const results = yield call(taskCurrent);\n    yield put(receiveCurrentTask(results));\n  } catch (e) {\n    yield put(failureTasks());\n  }\n}\n\nexport function* onStartTask() {\n  try {\n    yield call(taskStart);\n\n    yield put(requestCurrentTask());\n  } catch (e) {\n    yield put(failureCurrentTask());\n  }\n}\n\nexport function* onStopTask() {\n  try {\n    yield call(taskStop);\n\n    yield put(requestCurrentTask());\n    yield put(requestTasks());\n  } catch (e) {\n    yield put(failureCurrentTask());\n  }\n}\n\nexport function* onUpdateCurrentTask({ payload }) {\n  yield delay(300);\n\n  try {\n    yield call(taskUpdateCurrent, payload);\n\n    yield put(requestCurrentTask());\n  } catch (e) {\n    yield put(failureCurrentTask());\n  }\n}\n\nexport function* onDestroyTask({ payload }) {\n  yield call(taskDestroy, payload);\n  yield put(requestTasks());\n}\n\nexport function* watchRoot() {\n  yield takeEvery(REQUEST_TASKS, onRequestTasks);\n  yield takeEvery(REQUEST_TASK, onRequestTask);\n  yield takeEvery(REQUEST_CURRENT_TASK, onRequestCurrentTask);\n  yield takeEvery(START_TASK, onStartTask);\n  yield takeEvery(STOP_TASK, onStopTask);\n  yield takeEvery(DESTROY_TASK, onDestroyTask);\n  yield takeEvery(GENERATE_RANDOM_TASKS, onGenerateRandomTasks);\n  yield takeLatest(UPDATE_CURRENT_TASK, onUpdateCurrentTask);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    watchRoot(),\n  ]);\n}\n","import { all } from 'redux-saga/effects';\n\nimport task from './task';\n\nexport default function* rootSaga() {\n  yield all([\n    task(),\n  ]);\n}\n","import { createHashHistory } from 'history';\nconst history = createHashHistory();\n\nexport default history;\n","const styles = theme => ({\n  root: {\n    display: 'flex',\n    flex: 1,\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  subRoot: {\n    display: 'flex',\n    width: '100%',\n    flexDirection: 'column',\n  },\n  container: {\n    maxWidth: '60rem',\n  },\n  textField: {\n    width: '12rem',\n    marginBottom: '1.5rem',\n    color: '#3f51b5',\n  },\n  timer: {\n    width: '10rem',\n    height: '10rem',\n    background: '#ffffff',\n    marginBottom: '1.5rem',\n    fontSize: '2rem',\n    color: '#3f51b5',\n  },\n  card: {\n    marginTop: '1.5rem',\n    marginBottom: '1.5rem',\n    minWidth: '60rem',\n  },\n  pos: {\n    marginTop: 12,\n    marginBottom: 3,\n  },\n  actionTimer: {\n    marginBottom: '1.5rem',\n    background: '#ffffff',\n    color: '#3f51b5',\n  },\n  actionButton: {\n    marginTop: '1.5rem',\n    marginBottom: '1.5rem',\n    background: '#ffffff',\n    color: '#3f51b5',\n  },\n  buttonContainerCenter: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  tabs: {\n    marginBottom: '1.5rem',\n  },\n  tabsItems: {\n    background: '#00bcd4',\n  },\n  modal: {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`,\n    position: 'absolute',\n    width: '40rem',\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: 'none',\n  },\n  modalContent: {\n    marginBottom: '1.5rem',\n  },\n  modalClose: {\n    position: 'absolute',\n    color: '#3f51b5',\n    right: 15,\n    bottom: 10,\n  },\n  contentWrapper: {\n    marginBottom: '1.5rem',\n  },\n  button: {\n    background: '#ffffff',\n    color: '#3f51b5',\n  },\n  cellTable: {\n    background: '#eaf6ff',\n  },\n  marginTopContainer: {\n    marginTop: '1.5rem',\n  },\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { DateTime, Interval } from 'luxon';\nimport { Link } from 'react-router-dom';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\n\n// Actions\nimport {\n  destroyTask\n} from '../actions/task';\n\nimport styles from '../styles';\n\nconst TaskLog = (props) => {\n  const { classes } = props;\n\n  return (\n    <Grid container className={classes.contentWrapper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>#</TableCell>\n            <TableCell>Task</TableCell>\n            <TableCell>Time start</TableCell>\n            <TableCell>Time end</TableCell>\n            <TableCell>Time spend</TableCell>\n            <TableCell>Info</TableCell>\n            <TableCell>Delete</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.tasks.map(row => (\n            <TableRow\n              key={row.id}\n              className={classes.cellTable}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.id}\n              </TableCell>\n              <TableCell>\n                {row.name}\n              </TableCell>\n              <TableCell>\n                {DateTime.fromISO(row.start).toFormat('HH:mm:ss')}\n              </TableCell>\n              <TableCell>\n                {DateTime.fromISO(row.stop).toFormat('HH:mm:ss')}\n              </TableCell>\n              <TableCell>\n                {\n                  Interval\n                    .fromDateTimes(DateTime.fromISO(row.start), DateTime.fromISO(row.stop))\n                    .toDuration()\n                    .toFormat('hh:mm:ss')\n                }\n              </TableCell>\n              <TableCell>\n                <Button\n                  variant=\"contained\"\n                  className={classes.button}\n                  component={Link}\n                  to={`/tasks/${row.id}`}\n                >\n                  Info\n                </Button>\n              </TableCell>\n              <TableCell>\n                <Button\n                  variant=\"contained\"\n                  className={classes.button}\n                  onClick={() => {\n                    props.destroyTask({\n                      id: row.id,\n                    });\n                  }}\n                >\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Grid>\n  );\n};\n\nTaskLog.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  destroyTask: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({ task }) => ({\n    tasks: task.items,\n  }), {\n    destroyTask,\n  })(withStyles(styles)(TaskLog));\n","import { DateTime, Interval } from 'luxon';\n\nconst fromISOToDate = (date) => DateTime.fromISO(date).toFormat('yyyy-MM-dd');\n\nconst splitTasksByTime = (tasks) => {\n  return Array.from({ length: 24 }, (item, index) => ({\n      name: index,\n      value: Math.floor(tasks\n        .map(item => ({\n          ...item,\n          start: fromISOToDate(item.stop) === DateTime.local().toFormat('yyyy-MM-dd')\n            && fromISOToDate(item.start) !== fromISOToDate(item.stop)\n              ? DateTime.fromObject({ hour: 0, minute: 0, second: 0 }).toISO() : item.start,\n        }))\n        .filter(item => fromISOToDate(item.start) === DateTime.local().toFormat('yyyy-MM-dd'))\n        .map((item) => {\n          const results = {};\n          let time = DateTime.fromISO(item.start);\n          const stopTime = DateTime.fromISO(item.stop);\n          const startDate = time.toFormat('yyyy-MM-dd');\n\n          while (time <= stopTime) {\n            if (time.hour === stopTime.hour) {\n              results[time.hour] = Number(Interval.fromDateTimes(time, stopTime).toDuration().toFormat('s'));\n            } else {\n              results[time.hour] = Number(Interval\n                .fromDateTimes(time, DateTime.fromObject({ day: time.day, hour: time.hour + 1 }))\n                .toDuration().toFormat('s'));\n            }\n\n            time = time.plus({ minutes: (60 - time.minute) }).set({ seconds: 0, milliseconds: 0 });\n\n            if (startDate !== time.toFormat('yyyy-MM-dd')) {\n              break;\n            }\n          }\n\n          return results;\n        }).reduce((accumulator, value) => accumulator + (value[index] || 0), 0) / 60),\n    }));\n};\n\nexport default splitTasksByTime;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport styles from '../styles';\n\n// Actions\nimport { generateRandomTasks } from '../actions/task'\n\nimport splitTasksByTime from '../utils/splitTasksByTime';\n\nconst TaskChart = (props) => {\n  const { classes } = props;\n  const data = useMemo(() => splitTasksByTime(props.tasks), [props.tasks]);\n\n  return (\n    <div className={classes.subRoot}>\n      <ResponsiveContainer\n        width=\"100%\"\n        height={300}\n      >\n        <BarChart\n          height={300}\n          data={data}\n          margin={{\n            top: 5, right: 30, left: 20, bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar\n            name='Minutes in this hours'\n            dataKey=\"value\"\n            fill=\"#3248c7\"\n          />\n        </BarChart>\n      </ResponsiveContainer>\n\n      <div className={classes.buttonContainerCenter}>\n        <Button\n          variant=\"contained\"\n          className={classes.actionButton}\n          onClick={() => {\n            props.generateRandomTasks();\n          }}\n        >\n          Generate\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nTaskChart.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  generateRandomTasks: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({ task }) => ({\n    tasks: task.items,\n  }), {\n    generateRandomTasks,\n  })(withStyles(styles)(TaskChart));\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { DateTime, Interval } from 'luxon';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport Typography from '@material-ui/core/Typography';\n\n// Actions\nimport {\n  requestCurrentTask,\n  startTask,\n  stopTask,\n  updateCurrentTask,\n} from '../actions/task';\n\nimport styles from '../styles';\n\nconst TaskTimer = (props) => {\n  const { classes } = props;\n  const [task, setTask] = useState('');\n  const [timer, setTimer] = useState('00:00:00');\n  const [warning, setWarning] = useState(false);\n\n  useEffect(() => {\n    const clock = () => {\n      setTimer(Interval\n        .fromDateTimes(DateTime.fromISO(props.currentTask.start), DateTime.local())\n        .toDuration()\n        .toFormat('hh:mm:ss'));\n    };\n\n    // Run timer immediately.\n    if (props.currentTask.start) {\n      clock();\n    }\n\n    const timer = setInterval(() => {\n      if (props.currentTask.start) {\n        clock();\n      } else {\n        setTimer('00:00:00');\n        clearInterval(timer);\n      }\n    }, 1000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, [props.currentTask.id, props.currentTask.start]);\n\n  useEffect(() => {\n    // Load current task\n    props.requestCurrentTask();\n  }, []);\n\n  useEffect(() => {\n    // Restore task name\n    setTask(props.currentTask.name);\n  }, [props.currentTask.id]);\n\n  const startTask = () => {\n    props.startTask();\n  };\n\n  const stopTask = () => {\n    if (task.trim() !== '') {\n      props.stopTask();\n    } else {\n      setWarning(true);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={warning}\n        onClose={() => {\n          setWarning(false);\n        }}\n      >\n        <div className={classes.modal}>\n          <Grid\n            container\n            className={classes.modalContent}\n          >\n            <Typography\n              variant=\"h6\"\n              color='error'\n              id=\"modal-title\"\n            >\n              Empty task name\n            </Typography>\n            <Typography\n              variant=\"subtitle1\"\n              id=\"simple-modal-description\"\n            >\n              You are trying close your task without name, enter the title and try again!\n            </Typography>\n          </Grid>\n\n          <Button\n            className={classes.modalClose}\n            onClick={() => {\n              setWarning(false);\n            }}\n          >\n            Close\n          </Button>\n        </div>\n      </Modal>\n\n      <TextField\n        id=\"standard-name\"\n        label=\"Name of your task\"\n        className={classes.textField}\n        value={task}\n        onChange={(e) => {\n          setTask(e.target.value);\n\n          props.updateCurrentTask({\n            name: e.target.value,\n          });\n        }}\n        margin=\"normal\"\n      />\n\n      <Fab className={classes.timer}>\n        { timer }\n      </Fab>\n\n      { !props.currentTask.start ?\n        <Button\n          variant=\"contained\"\n          onClick={startTask}\n          className={classes.actionTimer}\n        >\n          Start\n        </Button>\n        :\n        <Button\n          variant=\"contained\"\n          onClick={stopTask}\n          className={classes.actionTimer}\n        >\n          Stop\n        </Button>\n      }\n    </div>\n  );\n};\n\nTaskTimer.propTypes = {\n  currentTask: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    start: PropTypes.any,\n    stop: PropTypes.any,\n  }),\n  requestCurrentTask: PropTypes.func.isRequired,\n  startTask: PropTypes.func.isRequired,\n  stopTask: PropTypes.func.isRequired,\n  updateCurrentTask: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({ task }) => ({\n    currentTask: task.currentItem,\n  }), {\n    requestCurrentTask,\n    startTask,\n    stopTask,\n    updateCurrentTask,\n  })(withStyles(styles)(TaskTimer));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Route, Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport TaskLog from '../../components/TaskLog';\nimport TaskChart from '../../components/TaskChart';\nimport TaskTimer from '../../components/TaskTimer';\n\n// Actions\nimport {\n  requestTasks,\n  requestCurrentTask,\n  startTask,\n  stopTask,\n  updateCurrentTask,\n} from '../../actions/task';\n\nimport styles from '../../styles';\n\nconst Home = (props) => {\n  const { classes } = props;\n\n  useEffect(() => {\n    // Load all tasks\n    props.requestTasks();\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        alignItems='center'\n        direction='column'\n        className={classes.container}\n      >\n        <TaskTimer />\n\n        <AppBar\n          position=\"static\"\n          className={classes.tabs}\n        >\n          <Tabs\n            className={classes.tabsItems}\n            variant=\"fullWidth\"\n            value={props.location.pathname === '/' ? 0 : 1}\n          >\n            <Tab\n              component={Link}\n              to={'/'}\n              label=\"Tasks log\"\n            />\n            <Tab\n              component={Link}\n              to={'/chart'}\n              label=\"Tasks chart\"\n            />\n          </Tabs>\n        </AppBar>\n\n        <Route\n          path={`/`}\n          exact\n          component={TaskLog}\n        />\n        <Route\n          path={`/chart`}\n          exact\n          component={TaskChart}\n        />\n      </Grid>\n    </div>\n  );\n};\n\nHome.propTypes = {\n  currentTask: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    start: PropTypes.any,\n    stop: PropTypes.any,\n  }),\n  requestTasks: PropTypes.func.isRequired,\n  requestCurrentTask: PropTypes.func.isRequired,\n  startTask: PropTypes.func.isRequired,\n  stopTask: PropTypes.func.isRequired,\n  updateCurrentTask: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({ task }) => ({\n    currentTask: task.currentItem,\n  }), {\n    requestTasks,\n    requestCurrentTask,\n    startTask,\n    stopTask,\n    updateCurrentTask,\n  })(withStyles(styles)(Home));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { DateTime, Interval } from 'luxon';\nimport { Redirect } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n// Actions\nimport {\n  requestTask,\n} from '../../actions/task';\n\nimport styles from '../../styles';\n\nconst Task = (props) => {\n  const { classes } = props;\n\n  if (props.isError) {\n    return <Redirect to={'/404'} />;\n  }\n\n  useEffect(() => {\n    // Load task\n    props.requestTask({\n      id: props.match.params.id,\n    });\n  }, [props.match.params.id]);\n\n  return (\n    <div className={classes.root}>\n      <Grid container alignItems='center' direction='column' className={classes.container}>\n\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography\n              variant=\"h4\"\n              component=\"h2\"\n            >\n              { props.task.name }\n            </Typography>\n            <Typography\n              className={classes.pos}\n              color=\"textSecondary\"\n            >\n              Start\n            </Typography>\n            <Typography component=\"p\">\n              { DateTime.fromISO(props.task.start).toFormat('yyyy-MM-dd HH:mm:ss')}\n            </Typography>\n            <Typography\n              className={classes.pos}\n              color=\"textSecondary\"\n            >\n              End\n            </Typography>\n            <Typography component=\"p\">\n              { DateTime.fromISO(props.task.stop).toFormat('yyyy-MM-dd HH:mm:ss')}\n            </Typography>\n            <Typography\n              className={classes.pos}\n              color=\"textSecondary\"\n            >\n              Time spend\n            </Typography>\n            <Typography component=\"p\">\n              {\n                Interval\n                  .fromDateTimes(DateTime.fromISO(props.task.start), DateTime.fromISO(props.task.stop))\n                  .toDuration()\n                  .toFormat('hh:mm:ss')\n              }\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button\n              size=\"small\"\n              onClick={() => {\n                props.history.goBack();\n              }}\n            >\n              Back\n            </Button>\n          </CardActions>\n        </Card>\n      </Grid>\n    </div>\n  );\n};\n\nTask.propTypes = {\n  task: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    start: PropTypes.any,\n    stop: PropTypes.any,\n  }),\n  requestTask: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({ task }) => ({\n    task: task.item,\n    isError: task.isError,\n  }), {\n    requestTask,\n  })(withStyles(styles)(Task));\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\n/**\n * Components\n */\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\n/**\n * Styles\n */\nimport { withStyles } from '@material-ui/core';\nimport styles from '../styles';\n\nconst NotFound = (props) => {\n  const { classes } = props;\n\n  return (\n    <Grid\n      className={classes.marginTopContainer}\n      container\n      justify=\"center\"\n    >\n      <Grid item xs={12} md={6}>\n        <Card>\n          <CardContent>\n            <Typography\n              variant=\"h4\"\n              gutterBottom\n            >\n              404\n            </Typography>\n            <Typography\n              color=\"textSecondary\"\n            >\n              Page not found.\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button\n              className={classes.button}\n              size=\"small\"\n              component={RouterLink}\n              to={'/'}\n            >\n              Homepage\n            </Button>\n          </CardActions>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(NotFound);\n","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport history from './history';\n\nimport Home from './scenes/home/Home';\nimport Task from './scenes/task/Task';\nimport NotFound from './scenes/NotFound';\n\nconst App = () => {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/chart\" exact component={Home} />\n        <Route path=\"/tasks/:id\" exact component={Task} />\n        <Route component={NotFound} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  REQUEST_TASKS,\n  RECEIVE_TASKS,\n  FAILURE_TASKS,\n  REQUEST_TASK,\n  RECEIVE_TASK,\n  FAILURE_TASK,\n  REQUEST_CURRENT_TASK,\n  RECEIVE_CURRENT_TASK,\n  FAILURE_CURRENT_TASK,\n} from '../actions/task';\n\nconst initialState = {\n  isFetching: false,\n  isError: false,\n  items: [],\n  item: {},\n  currentItem: {\n    name: '',\n  },\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case REQUEST_TASKS:\n      return { ...state, isFetching: true, isError: false };\n    case RECEIVE_TASKS:\n      return { ...state, items: action.payload, isFetching: false };\n    case FAILURE_TASKS:\n      return { ...state, isFetching: false, isError: true };\n\n    case REQUEST_TASK:\n      return { ...state, isFetching: true, isError: false };\n    case RECEIVE_TASK:\n      return { ...state, item: action.payload, isFetching: false };\n    case FAILURE_TASK:\n      return { ...state, isFetching: false, isError: true };\n\n    case REQUEST_CURRENT_TASK:\n      return { ...state, isFetching: true, isError: false };\n    case RECEIVE_CURRENT_TASK:\n      return { ...state, currentItem: action.payload, isFetching: false };\n    case FAILURE_CURRENT_TASK:\n      return { ...state, isFetching: false, isError: true };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\n\nimport task from './task';\n\nexport default combineReducers({ task });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootSaga from './sagas'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport reducers from './reducers';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(sagaMiddleware)));\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}